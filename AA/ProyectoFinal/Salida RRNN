
{'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [3, 35]}

Grid scores on development set:

0.742 (+/-0.116) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [1, 25]}
0.745 (+/-0.110) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [1, 30]}
0.745 (+/-0.109) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [1, 35]}
0.745 (+/-0.111) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [1, 25]}
0.745 (+/-0.110) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [1, 30]}
0.745 (+/-0.108) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [1, 35]}
0.745 (+/-0.115) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [1, 25]}
0.746 (+/-0.118) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [1, 30]}
0.745 (+/-0.115) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [1, 35]}
0.744 (+/-0.119) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [1, 25]}
0.745 (+/-0.117) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [1, 30]}
0.745 (+/-0.114) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [1, 35]}
0.755 (+/-0.114) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [2, 25]}
0.751 (+/-0.119) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [2, 30]}
0.749 (+/-0.106) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [2, 35]}
0.753 (+/-0.119) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [2, 25]}
0.750 (+/-0.117) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [2, 30]}
0.752 (+/-0.116) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [2, 35]}
0.754 (+/-0.117) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [2, 25]}
0.746 (+/-0.113) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [2, 30]}
0.750 (+/-0.118) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [2, 35]}
0.748 (+/-0.119) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [2, 25]}
0.753 (+/-0.116) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [2, 30]}
0.749 (+/-0.113) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [2, 35]}
0.756 (+/-0.115) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [3, 25]}
0.757 (+/-0.111) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [3, 30]}
0.755 (+/-0.117) for {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': [3, 35]}
0.755 (+/-0.119) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [3, 25]}
0.753 (+/-0.119) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [3, 30]}
0.758 (+/-0.118) for {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': [3, 35]}
0.755 (+/-0.115) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [3, 25]}
0.754 (+/-0.123) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [3, 30]}
0.753 (+/-0.115) for {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': [3, 35]}
0.753 (+/-0.117) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [3, 25]}
0.753 (+/-0.121) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [3, 30]}
0.753 (+/-0.114) for {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': [3, 35]}



 END OF TUNNING PARAMETERS!!!



The model is trained on the full train set and with best parameters
The scores are computed with full test set
             precision    recall  f1-score   support

        0.0       0.87      0.82      0.84      4696
        1.0       0.45      0.55      0.50      1304

avg / total       0.78      0.76      0.77      6000


Confusion Matrix
Confusion matrix, without normalization
[[3840  856]
 [ 591  713]]
Introduzca algo por teclado: 

khjkj

Process finished with exit code 0
 
